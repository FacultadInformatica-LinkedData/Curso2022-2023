# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/FacultadInformatica-LinkedData/Curso2022-2023/blob/master/Assignment4/course_materials/notebooks/Task07.ipynb

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

ns = Namespace("http://somewhere#")
print("\f","RDFLib")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
  for s2, p2, o1 in g.triples((None, RDFS.subClassOf, s)):
    print(s2)
# TO DO
print("\f","SPARQL")
q1 =  ("""SELECT ?s WHERE{
    ?s (rdfs:subClassOf/rdfs:subClassOf*) ns:Person.
  } """)
# Visualize the results
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery
print("\f","RDFLib")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2, p2, o2 in g.triples((None, RDF.type, s)):
    print(s2)

for s3, p3, o3 in g.triples((None, RDF.type, ns.Person)):
  print(s3)


print("\f","SPARQL")
q1 = prepareQuery("""
  SELECT ?s WHERE { 
    {?s a ns:Person} UNION
    {
      ?c (rdfs:subClassOf/rdfs:subClassOf*) ns:Person.
      ?s a ?c
      }
  }
  """,
initNs = {"rdfs": RDFS, "ns": ns}
)

for r in g.query(q1):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print("\f","RDFLib")

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2, p2, o2 in g.triples((None, RDF.type, s)):
    print(s2)
    for s3, p3, o3 in g.triples((s2, None, None)):
      print(p3)

for s4, p4, o4 in g.triples((None, RDF.type, ns.Person)):
  print(s4)
  for s5, p5, o5 in g.triples((s4, None, None)):
      print(p5)

print("\f","SPARQL")

q1 = prepareQuery('''
  SELECT ?s ?P WHERE { 
    {
      ?s a ns:Person.
      ?s ?P ?v.
    } UNION
    {
      ?c (rdfs:subClassOf/rdfs:subClassOf*) ns:Person.
      ?s a ?c.
      ?s ?P ?v.
      }
  }
  ''',
  initNs = {"rdfs": RDFS, "ns": ns, }
)

for r in g.query(q1):
  print(r)