# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18P0xTS31q1P7nR4efg0Yy3QrClOxqMAe

**Task 08: Completing missing data**
"""


github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.plugins.sparql import prepareQuery
from rdflib.namespace import RDF
import pandas as pd

g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"resources/data01.rdf", format="xml")
g2.parse(github_storage+"resources/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y 
completa los campos (given name, family name y email) que puedan faltar con los datos 
del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

# Person Class -> http://data.org#Person

g3 = g1 + g2 # source: https://rdflib.readthedocs.io/en/stable/merging.html
DATA = Namespace("http://data.org#")


q1 = prepareQuery("""
    SELECT ?subject ?pred ?object 
    WHERE 
    {
        ?subject a data:Person ;
            ?pred ?object . 
    }
    """, 
        initNs={"data": DATA}
    )

solve = []

for person, prop, value in g3.query(q1):
    solve.append((person, f"...{prop[-45:]}", value))

df = pd.DataFrame(solve, columns =['Person', 'Property', 'Value'])

print(df)