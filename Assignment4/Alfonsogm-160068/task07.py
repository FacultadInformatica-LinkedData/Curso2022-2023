# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wY-3ZSIbFRHEiVG-VZcWNWgN7ixQvrD_

**Task 07: Querying RDF(s)**
"""


github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

for s, p, o in g:
  print(s,p,o)

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

print("\nTask7.1\n")
from rdflib.namespace import RDF, RDFS
from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

q1= prepareQuery('''
Select ?subj
Where {
  ?subj rdfs:subClassOf/rdfs:subClassOf* ns:Person
}
''',
  initNs = {"ns": ns,"rdfs":RDFS}
)

for r in g.query(q1):
  print(r.subj)
print("\n")

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
  for s1, p1, o1 in g.triples((None, RDFS.subClassOf, s)):
    print(s1)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

print("\nTask7.2\n")
q2= prepareQuery('''
Select ?subj
Where {
  {
    ?subj a ns:Person .
  } UNION {
    ?class rdfs:subClassOf/rdfs:subClassOf* ns:Person .
    ?subj a ?class 
  }
}
''',
  initNs = {"ns": ns,"rdfs":RDFS}
)
# Visualize the results
for r in g.query(q2):
  print(r.subj)
print("\n")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s)):
    print(s1)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

print("\nTask7.3\n")
q3= prepareQuery('''
Select ?subj ?p ?obj 
Where {
  {
    ?subj a ns:Person .
    ?subj ?p ?obj
  } UNION {
    ?class rdfs:subClassOf/rdfs:subClassOf* ns:Person .
    ?subj a ?class .
    ?subj ?p ?obj
  }
}
''',
  initNs = {"ns": ns,"rdfs":RDFS}
)
# Visualize the results
for r in g.query(q3):
  print(r.subj,r.p,r.obj)
print("\n")

for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for s1, p1, o1 in g.triples((s, None, None)):
    print(s1,p1,o1)

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s)):
    for s2, p2, o2 in g.triples((s1, None, None)):
      print(s2,p2,o2)