# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l021FXrVQXulSpPrePx5-z8UGRq3z5bS

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
ns = Namespace("http://somewhere#")
print("RDFLib subclases:")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

from rdflib.plugins.sparql import prepareQuery
print("SPARQL subclases:")
query=prepareQuery('''
  SELECT ?subclass
  WHERE { 
    ?subclass rdfs:subClassOf ns:Person. 
  }''',
    initNs = {"rdfs":RDFS, "ns":ns}
)
for s in g.query(query):
  print(s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)) :
  print(s)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2, p2, o2 in g.triples((None, RDF.type, s)):
    print(s2)

print("SPARQL:")
query = prepareQuery('''
  SELECT DISTINCT ?s
  WHERE { 
    {
      ?s rdf:type ns:Person. 
    }
    UNION {
      ?p rdfs:subClassOf/rdfs:subClassOf* ns:Person.
      ?s rdf:type ?p
    }
  }
  
  ''',
  initNs = {"rdfs":RDFS, "rdf":RDF, "ns":ns}
)

for s in g.query(query):
  print(s)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results
print("RDFLib:")
for s,p,o in g.triples((None, RDF.type, ns.Person)) :
  for s2, p2, o2 in g.triples((s, None, None)):
    print(s2, p2, o2)
for a,b,oc in g.triples((None, RDFS.subClassOf, ns.Person)):
  for a2,b2,c2 in g.triples((None, RDF.type, a)):
    for a3, b3, c3 in g.triples((a2, None, None)):
      print(a3, b3, c3)

print("SPARQL:")
query = prepareQuery('''
  SELECT DISTINCT ?s ?p ?o
  WHERE{
  	{
    ?s rdf:type ns:Person .
    ?s ?p ?o
    } UNION {
    ?s2 rdfs:subClassOf/rdfs:subClassOf* ns:Person .
    ?s rdf:type ?s2 .
    ?s ?p ?o
    }
  }
  ''',
  initNs = {"rdf": RDF, "rdfs": RDFS, "ns": ns}
)
for s in g.query(query):
  print(s)